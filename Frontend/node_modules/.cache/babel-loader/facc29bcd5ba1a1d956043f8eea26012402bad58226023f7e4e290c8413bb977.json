{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nexport default function useFetchAll(urls) {\n  _s();\n  const prevUrls = useRef([]);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Only run if the array of URLs passed in changes\n    if (areEqual(prevUrls.current, urls)) {\n      setLoading(false);\n      return;\n    }\n    prevUrls.current = urls;\n    const promises = urls.map(url => fetch(process.env.REACT_APP_API_BASE_URL + url).then(response => {\n      if (response.ok) return response.json();\n      throw response;\n    }));\n    Promise.all(promises).then(json => setData(json)).catch(e => {\n      console.error(e);\n      setError(e);\n    }).finally(() => setLoading(false));\n  }, [urls]);\n  return {\n    data,\n    loading,\n    error\n  };\n}\n_s(useFetchAll, \"mjS6UOZmm/KZUx/MPvNzVoqc/cU=\");\nfunction areEqual(array1, array2) {\n  return array1.length === array2.length && array1.every((value, index) => value === array2[index]);\n}","map":{"version":3,"names":["useState","useRef","useEffect","useFetchAll","urls","_s","prevUrls","data","setData","loading","setLoading","error","setError","areEqual","current","promises","map","url","fetch","process","env","REACT_APP_API_BASE_URL","then","response","ok","json","Promise","all","catch","e","console","finally","array1","array2","length","every","value","index"],"sources":["C:/Users/Eris/Documents/GitHub/biztrips/Frontend/src/services/useFetchAll.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nexport default function useFetchAll(urls) {\n  const prevUrls = useRef([]);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Only run if the array of URLs passed in changes\n    if (areEqual(prevUrls.current, urls)) {\n      setLoading(false);\n      return;\n    }\n    prevUrls.current = urls;\n\n    const promises = urls.map((url) =>\n      fetch(process.env.REACT_APP_API_BASE_URL + url).then((response) => {\n        if (response.ok) return response.json();\n        throw response;\n      })\n    );\n\n    Promise.all(promises)\n      .then((json) => setData(json))\n      .catch((e) => {\n        console.error(e);\n        setError(e);\n      })\n      .finally(() => setLoading(false));\n  }, [urls]);\n\n  return { data, loading, error };\n}\n\nfunction areEqual(array1, array2) {\n  return (\n    array1.length === array2.length &&\n    array1.every((value, index) => value === array2[index])\n  );\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEnD,eAAe,SAASC,WAAWA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGL,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCE,SAAS,CAAC,MAAM;IACd;IACA,IAAIW,QAAQ,CAACP,QAAQ,CAACQ,OAAO,EAAEV,IAAI,CAAC,EAAE;MACpCM,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IACAJ,QAAQ,CAACQ,OAAO,GAAGV,IAAI;IAEvB,MAAMW,QAAQ,GAAGX,IAAI,CAACY,GAAG,CAAEC,GAAG,IAC5BC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,sBAAsB,GAAGJ,GAAG,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAK;MACjE,IAAIA,QAAQ,CAACC,EAAE,EAAE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACvC,MAAMF,QAAQ;IAChB,CAAC,CACH,CAAC;IAEDG,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC,CAClBO,IAAI,CAAEG,IAAI,IAAKjB,OAAO,CAACiB,IAAI,CAAC,CAAC,CAC7BG,KAAK,CAAEC,CAAC,IAAK;MACZC,OAAO,CAACnB,KAAK,CAACkB,CAAC,CAAC;MAChBjB,QAAQ,CAACiB,CAAC,CAAC;IACb,CAAC,CAAC,CACDE,OAAO,CAAC,MAAMrB,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEG,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACjC;AAACN,EAAA,CA/BuBF,WAAW;AAiCnC,SAASU,QAAQA,CAACmB,MAAM,EAAEC,MAAM,EAAE;EAChC,OACED,MAAM,CAACE,MAAM,KAAKD,MAAM,CAACC,MAAM,IAC/BF,MAAM,CAACG,KAAK,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,KAAKH,MAAM,CAACI,KAAK,CAAC,CAAC;AAE3D"},"metadata":{},"sourceType":"module","externalDependencies":[]}